希尔排序算法
具体原理看网上解析 此为实现代码
#include<stdio.h>
void quiet(int arr[], int sz)
{
    int i, j, inc, key;
    //初始增量n/2 每趟之后除以2
    for (inc = sz / 2; inc >= 1; inc /= 2)
    {
        //每一趟采用插入排序
        for (i = inc; i < sz; i++)//每一轮都要把上一轮的变量继承下来
        {
            key = arr[i];
            for (j = i; j >= inc && key < arr[j - inc]; j -= inc)
            {
                arr[j] = arr[j - inc];
                arr[j-inc] = key;
            }
        }
    }
}
int main(void)
{
    int arr[] = { 5,40,63,45,86,95,75,12 };
    int sz = sizeof(arr) / sizeof(arr[0]);
    quiet(arr, sz);
    for (int i = 0; i < sz; i++)
        printf("%d ", arr[i]);
    return 0;



//bubble_sort冒泡排序算法
#include<stdio.h>
void bubble_sort(int arr[],int sz)
{       //传过来的是数组第一个数地址所以不能在函数里弄sz 只能传过来
    int i = 0;
    for (i = 0; i < sz-1; i++)
    {
        int flag = 1;
        int j = 0;
        for (j = 0; j < sz - 1 - i; j++)
        {
            if (arr[j] > arr[j + 1])
            {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;//排序路上遇见更大的数会先排序更大的数★
                flag = 0;         //并非一次性将一个数送到底
            }
        }
        if (flag == 1)
        {
            break;//这样的判断防止算法进行无意义的排序 增加了效率
        }         //外层没有for或者switch不可以用break
    }
}
int main(void)
{
    int i=0;
    int arr[10] = {10,9,8,7,6,5,4,3,2,1};
    int sz = sizeof(arr) / sizeof(arr[0]);
    bubble_sort(arr,sz);
    for (i = 0; i < sz; i++)
    {
        printf("%d ", arr[i]);
    }
    return 0;
}









